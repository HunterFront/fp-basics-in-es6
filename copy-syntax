#!/usr/bin/env babel-node

import fs from 'fs';
import yargs from 'yargs';
import { spawn } from 'child_process';

const argv = yargs
  .default('s', 'seashell')
  .alias('s', 'style')
  .default('S', 'js')
  .alias('S', 'syntax')
  .default('O', 'rtf')
  .alias('O', 'output')
  .default('all-but', 0)
  .boolean('D')
  .default('D', false)
  .alias('D', 'debug')
  .help('h')
  .argv;

const FONT_SIZE = '30';
const FONT_FAMILY = 'Monaco';

const highlightArgs = [
  '-s', argv.style,
  '-O', argv.output,
  '-S', argv.syntax,
  '-K', FONT_SIZE,
  '-k', FONT_FAMILY
];

const [filename] = argv._;
const highlight = spawn('highlight', highlightArgs);
const pbcopy = spawn('pbcopy');

highlight.stdin.setEncoding('utf-8');

fs.readFile(filename, 'utf-8', (err, data) => {
  if (!err) {
    const dataArray = data.split('\n');
    const allBut = parseInt(argv['all-but'], 10);
    const chunk = dataArray.slice(0, dataArray.length - allBut);

    highlight.stdin.write(chunk.join('\n'));
    highlight.stdin.end();
  }
});

highlight.stdout.pipe(pbcopy.stdin);

if (argv.debug) {
  highlight.stdout.pipe(process.stdout);
}
